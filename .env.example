# ===================================
# NewsArchive Pro Environment Configuration
# ===================================
# 
# ARCHITECTURE OVERVIEW:
# ----------------------
# Frontend (React) ‚Üí API Gateway ‚Üí Lambda Functions ‚Üí AWS Services
#
# PROCESSING FLOW:
# ---------------
# 1. Upload ‚Üí API Gateway (REACT_APP_API_GATEWAY_URL)
# 2. Intelligent Routing ‚Üí Lambda (fast) OR AWS Batch (heavy)
# 3. OCR Processing ‚Üí AWS Textract + Comprehend
# 4. Results Storage ‚Üí DynamoDB + S3
# 5. Content Delivery ‚Üí CloudFront (REACT_APP_AWS_CLOUDFRONT_DOMAIN)
#
# API ENDPOINTS:
# -------------
# POST /images                     - Upload images with intelligent OCR routing
# POST /processing-recommendation - Get processing route analysis before upload  
# GET  /ocr-jobs/:userId          - Monitor OCR job status (both Lambda & Batch)
# GET  /ocr-job/:jobId/:createdAt - Get specific job details and results
# GET  /users                     - User management
# POST /users                     - Create users

# üì± Browser Test

#   You can also test directly in your browser:
#   - Health Check: https://fps3eo16u7.execute-api.ap-southeast-2.amazonaws.com/dev/newsarchivepro

#   üîç Available Endpoints

#   From your Lambda code, these endpoints are available:

#   | Method | Endpoint                   | Description                    |
#   |--------|----------------------------|--------------------------------|
#   | GET    | /newsarchivepro            | Health check                   |
#   | GET    | /users                     | List users info                |
#   | POST   | /users                     | Create user                    |
#   | GET    | /users/:id                 | Get user by ID                 |
#   | GET    | /users/email/:email        | Get user by email              |
#   | POST   | /images                    | Upload image for OCR           |
#   | POST   | /processing-recommendation | Get OCR routing recommendation |
#   | GET    | /ocr-jobs/:userId          | Get user's OCR jobs            |
#   | GET    | /ocr-job/:jobId/:createdAt | Get specific OCR job           |
#   | GET    | /document/:groupId         | Get multi-page document        |
# ===================================

# Supabase Configuration (Authentication Only)
REACT_APP_SUPABASE_URL=https://your-project-id.supabase.co
REACT_APP_SUPABASE_ANON_KEY=your-supabase-anon-key

# Site Configuration
REACT_APP_SITE_URL=https://d1gnn36zhrv38g.cloudfront.net
REACT_APP_APP_NAME=NewsArchive Pro
REACT_APP_VERSION=1.0.0

# Backend API Configuration
# Lambda backend via API Gateway - Main API for uploads, user management, and OCR job status
# This URL handles: POST /images, GET /ocr-jobs, GET /users, POST /processing-recommendation
REACT_APP_API_GATEWAY_URL=https://fps3eo16u7.execute-api.ap-southeast-2.amazonaws.com/dev

# AWS Configuration
REACT_APP_AWS_REGION=ap-southeast-2
# CloudFront domain for serving processed images and results
REACT_APP_AWS_CLOUDFRONT_DOMAIN=dnit1caol1xgt.cloudfront.net

# OCR Processing Configuration
# Intelligent routing thresholds for Lambda vs Batch processing
REACT_APP_OCR_LAMBDA_MAX_FILE_SIZE=52428800
REACT_APP_OCR_LAMBDA_TIMEOUT_THRESHOLD=270
REACT_APP_OCR_BATCH_MIN_PAGES=10
REACT_APP_OCR_SHOW_ROUTE_ANALYSIS=true

# Upload Configuration
REACT_APP_MAX_FILE_SIZE=52428800
REACT_APP_MAX_BATCH_SIZE=100
REACT_APP_ALLOWED_IMAGE_TYPES=image/jpeg,image/png,image/tiff,image/webp,image/bmp,image/gif

# Optional: Environment
NODE_ENV=development